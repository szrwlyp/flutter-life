plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.life_app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.life_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        //uni小程序sdk配置
        ndk {
            abiFilters 'x86','x86_64','armeabi-v7a','arm64-v8a' // 不支持armeabi
        }
    }

    buildTypes {
        release {   //发布
            // 注意点：minifyEnabled 混淆和shrinkResources移除无用资源需同时为true或false，否则可能导致编译失败！
            minifyEnabled true  //是否进行混淆
            shrinkResources true  //删除无用资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard.cfg' //指定混淆规则文件
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug //设置签名信息
        }
    }
    //uni小程序sdk配置（此处配置必须添加 否则无法正确运行）
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        //noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
}

flutter {
    source '../..'
}

// uni小程序sdk配置（导入aar需要的配置）
repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    //uni小程序sdk配置（导入SDK相关依赖jar、aar）
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    //uni小程序sdk配置（必须添加的依赖）
    implementation 'androidx.recyclerview:recyclerview:1.0.0' //必须集成，android 自带recyclerview支持
    implementation 'androidx.legacy:legacy-support-v4:1.0.0' //必须集成，androidx support支持
    implementation 'androidx.appcompat:appcompat:1.0.0' //必须集成，androidx appcompat支持
    implementation 'com.alibaba:fastjson:1.2.83' //必须集成，fastjson功能需要
    implementation 'com.facebook.fresco:fresco:2.5.0'//必须集成，图片加载需要
    implementation 'com.facebook.fresco:animated-gif:2.5.0'//必须集成，图片加载需要
    implementation 'com.github.bumptech.glide:glide:4.9.0'//必须集成，图片加载需要
    implementation 'androidx.webkit:webkit:1.3.0' //3.6.15版本之后 必须集成，用来支持暗黑模式
}
